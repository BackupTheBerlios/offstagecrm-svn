/*
OffstageArts: Enterprise Database for Arts Organizations
This file Copyright (c) 2005-2007 by Robert Fischer

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * SimpleSearchPanel.java
 *
 * Created on June 5, 2005, 5:47 PM
 */

package offstage.gui;
import java.sql.*;
import citibob.sql.pgsql.*;
import citibob.jschema.*;
import citibob.swing.table.*;
import citibob.multithread.*;
import offstage.FrontApp;
import offstage.db.FullEntityDbModel;
import offstage.db.*;
import java.awt.event.*;
import offstage.swing.typed.*;
import citibob.swing.typed.*;
//import java.beans.*;

/**import 
 *
 * @author  citibob
 */
public class SimpleSearchPanel extends javax.swing.JPanel
implements java.beans.PropertyChangeListener
{
	FullEntityDbModel dm;
	citibob.app.App app;
	
	/** Creates new form SimpleSearchPanel */
	public SimpleSearchPanel() {
		initComponents();

		selector.addPropertyChangeListener("value", this);
//		// Double-clicking will go to selected person
//		final JTypedSelectTable table = selector.getSearchTable();
//		table.addMouseListener(
//		new DClickTableMouseListener(table) {
//		public void doubleClicked(final int row) {
//			app.runGui(SimpleSearchPanel.this, new StRunnable() {
//			public void run(Statement st) throws Exception {
//				// Make sure it's selected in the GUI
//				table.getSelectionModel().setSelectionInterval(row, row);
//
//				// Process the selection
//				int entityid = (Integer)selector.getValue();//getSelectedEntityID();
//				if (entityid < 0) return;
//				dm.setKey(entityid);
//				dm.doSelect(st);
//			}});
//		}});
	}
	public void initRuntime(FrontApp fapp) //Statement st, FullEntityDbModel dm)
	{
		this.app = fapp;
		this.dm = fapp.getFullEntityDm();
		selector.initRuntime(fapp);
	}

public void propertyChange(final java.beans.PropertyChangeEvent evt)
{
	app.runGui(SimpleSearchPanel.this, new StRunnable() {
	public void run(Statement st) throws Exception {
		Integer Entityid = (Integer)evt.getNewValue();
		if (Entityid == null) return;
		int entityid = Entityid;
		if (entityid < 0) return;
		dm.setKey(entityid);
		dm.doSelect(st);
	}});
}	

/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        selector = new offstage.swing.typed.EntitySelector();

        setLayout(new java.awt.BorderLayout());

        add(selector, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

		
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private offstage.swing.typed.EntitySelector selector;
    // End of variables declaration//GEN-END:variables
	
}
