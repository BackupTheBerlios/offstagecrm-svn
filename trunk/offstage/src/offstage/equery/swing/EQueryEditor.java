/*
Offstage CRM: Enterprise Database for Arts Organizations
This file Copyright (c) 2006 by Robert Fischer

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/
/*
 * EQueryEditor.java
 *
 * Created on July 2, 2005, 11:41 AM
 */

package offstage.equery.swing;

import citibob.swing.*;
import citibob.swing.table.*;
import citibob.swing.typed.*;
import java.sql.*;
import javax.swing.table.*;
import javax.swing.event.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import citibob.jschema.*;

/**
 *
 * @author  citibob
 */
public class EQueryEditor extends javax.swing.JPanel {

	EQueryTableModel qmodel;
	EClauseTableModel cmodel;

    /** Creates new form EQueryEditor */
    public EQueryEditor() {
        initComponents();
		
		eClauseScrollPane.setRowHeaderView(new TableRowHeader(eClauseScrollPane, eClauseTable, 15));
    }

	public void initRuntime(EQueryTableModel qm, EClauseTableModel cm)
	throws SQLException
	{
		this.qmodel = qm;
		this.cmodel = cm;
		eQueryTable.initRuntime(qm);
		eClauseTable.initRuntime(cm);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        eQueryTable = new offstage.equery.swing.EQueryTable();
        jToolBar2 = new javax.swing.JToolBar();
        bAddClause = new javax.swing.JButton();
        bRemoveClause = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        eClauseScrollPane = new javax.swing.JScrollPane();
        eClauseTable = new offstage.equery.swing.EClauseTable();
        jToolBar1 = new javax.swing.JToolBar();
        bAddElement = new javax.swing.JButton();
        bRemoveElement = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        eQueryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(eQueryTable);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        bAddClause.setText("Add");
        bAddClause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddClauseActionPerformed(evt);
            }
        });

        jToolBar2.add(bAddClause);

        bRemoveClause.setText("Remove");
        bRemoveClause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoveClauseActionPerformed(evt);
            }
        });

        jToolBar2.add(bRemoveClause);

        jPanel1.add(jToolBar2, java.awt.BorderLayout.SOUTH);

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        eClauseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        eClauseScrollPane.setViewportView(eClauseTable);

        jPanel2.add(eClauseScrollPane, java.awt.BorderLayout.CENTER);

        bAddElement.setText("Add");
        bAddElement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddElementActionPerformed(evt);
            }
        });

        jToolBar1.add(bAddElement);

        bRemoveElement.setText("Remove");
        bRemoveElement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoveElementActionPerformed(evt);
            }
        });

        jToolBar1.add(bRemoveElement);

        jPanel2.add(jToolBar1, java.awt.BorderLayout.SOUTH);

        jSplitPane1.setRightComponent(jPanel2);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents

private void bRemoveClauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoveClauseActionPerformed
	ListSelectionModel lsm = eQueryTable.getSelectionModel();
	if (lsm.isSelectionEmpty()) {
		return;
	} else {
		int selectedRow = lsm.getMinSelectionIndex();
		qmodel.removeClause(selectedRow);
	}
}//GEN-LAST:event_bRemoveClauseActionPerformed

private void bAddClauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddClauseActionPerformed
	EQueryTableModel m = (EQueryTableModel)eQueryTable.getModel();
	m.addClause();
}//GEN-LAST:event_bAddClauseActionPerformed

private void bRemoveElementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoveElementActionPerformed
	ListSelectionModel lsm = eClauseTable.getSelectionModel();
	if (lsm.isSelectionEmpty()) {
		return;
	} else {
		int selectedRow = lsm.getMinSelectionIndex();
		cmodel.removeElement(selectedRow);
	}
}//GEN-LAST:event_bRemoveElementActionPerformed

private void bAddElementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddElementActionPerformed
	EClauseTableModel m = (EClauseTableModel)eClauseTable.getModel();
	m.addElement();
}//GEN-LAST:event_bAddElementActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddClause;
    private javax.swing.JButton bAddElement;
    private javax.swing.JButton bRemoveClause;
    private javax.swing.JButton bRemoveElement;
    private javax.swing.JScrollPane eClauseScrollPane;
    private offstage.equery.swing.EClauseTable eClauseTable;
    private offstage.equery.swing.EQueryTable eQueryTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables

}
